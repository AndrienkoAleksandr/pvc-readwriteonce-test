kind: Pod
apiVersion: v1
metadata:
  annotations:
    build.appstudio.openshift.io/build: 'true'
    tekton.dev/ready: READY
    build.appstudio.openshift.io/type: build
  name: nodejs-image-builder
  namespace: default
spec:
  restartPolicy: Never
  activeDeadlineSeconds: 5400
  initContainers:
    - resources: {}
      terminationMessagePath: /dev/termination-log
      name: place-tools
      command:
        - /ko-app/entrypoint
        - cp
        - /ko-app/entrypoint
        - /tekton/tools/entrypoint
      imagePullPolicy: IfNotPresent
      volumeMounts:
        - name: tekton-internal-tools
          mountPath: /tekton/tools
        - name: kube-api-access-6mt8b
          readOnly: true
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      terminationMessagePolicy: File
      image: >-
        registry.redhat.io/openshift-pipelines/pipelines-entrypoint-rhel8@sha256:1f38b7296065233d17f7529f29b948183ddca4ccf640bd5d60be3aa3a6bd9366
      workingDir: /
    - resources: {}
      terminationMessagePath: /dev/termination-log
      name: working-dir-initializer
      command:
        - sh
      imagePullPolicy: IfNotPresent
      volumeMounts:
        - name: tekton-internal-workspace
          mountPath: /workspace
        - name: kube-api-access-6mt8b
          readOnly: true
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      terminationMessagePolicy: File
      image: >-
        registry.access.redhat.com/ubi8/ubi-minimal@sha256:54ef2173bba7384dc7609e8affbae1c36f8a3ec137cacc0866116d65dd4b9afe
      workingDir: /workspace
      args:
        - '-c'
        - mkdir -p /workspace/source
  serviceAccountName: pipeline
  imagePullSecrets:
    - name: pipeline-dockercfg-xhzdn
  priority: 0
  schedulerName: default-scheduler
  enableServiceLinks: true
  terminationGracePeriodSeconds: 30
  preemptionPolicy: PreemptLowerPriority
  nodeName: crc-ktfxm-master-0
  securityContext: {}
  containers:
    - resources: {}
      terminationMessagePath: /tekton/termination
      name: step-generate
      command:
        - sh
      env:
        - name: HOME
          value: /tekton/home
        - name: SSL_CERT_DIR
          value: >-
            /tekton-custom-certs:/etc/ssl/certs:/etc/pki/tls/certs:/system/etc/security/cacerts
      imagePullPolicy: IfNotPresent
      volumeMounts:
        - name: gen-source
          mountPath: /gen-source
        - name: ws-rgdp4
          mountPath: /workspace/source
          subPath: pv-nodejs-builder-2022-02-08-105858
        - name: tekton-internal-tools
          mountPath: /tekton/tools
        - name: tekton-internal-workspace
          mountPath: /workspace
        - name: tekton-internal-secret-volume-pipeline-dockercfg-xhzdn-gn7kh
          mountPath: /tekton/creds-secrets/pipeline-dockercfg-xhzdn
        - name: kube-api-access-6mt8b
          readOnly: true
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        - name: config-trusted-cabundle-volume
          readOnly: true
          mountPath: /tekton-custom-certs/ca-bundle.crt
          subPath: ca-bundle.crt
        - name: config-service-cabundle-volume
          readOnly: true
          mountPath: /tekton-custom-certs/service-ca.crt
          subPath: service-ca.crt
      terminationMessagePolicy: File
      image: >-
        registry.redhat.io/ocp-tools-4-tech-preview/source-to-image-rhel8@sha256:e518e05a730ae066e371a4bd36a5af9cedc8686fd04bd59648d20ea0a486d7e5
      workingDir: /workspace/source
      args:
        - -c
        - >-
          s2i build . image-registry.openshift-image-registry.svc:5000/openshift/nodejs:14-ubi8 '--as-dockerfile' /gen-source/Dockerfile.gen
    - resources: {}
      terminationMessagePath: /tekton/termination
      name: step-build
      command:
        - /bin/bash
      env:
        - name: SSL_CERT_DIR
          value: >-
            /tekton-custom-certs:/etc/ssl/certs:/etc/pki/tls/certs:/system/etc/security/cacerts
      imagePullPolicy: IfNotPresent
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
        - name: gen-source
          mountPath: /gen-source
        - name: ws-rgdp4
          mountPath: /workspace/source
          subPath: pv-nodejs-builder-2022-02-08-105858
        - name: tekton-internal-tools
          mountPath: /tekton/tools
        - name: tekton-creds-init-home-1
          mountPath: /tekton/creds
        - name: tekton-internal-workspace
          mountPath: /workspace
        - name: tekton-internal-home
          mountPath: /tekton/home
        - name: tekton-internal-results
          mountPath: /tekton/results
        - name: tekton-internal-steps
          mountPath: /tekton/steps
        - name: tekton-internal-secret-volume-pipeline-dockercfg-xhzdn-gn7kh
          mountPath: /tekton/creds-secrets/pipeline-dockercfg-xhzdn
        - name: kube-api-access-6mt8b
          readOnly: true
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        - name: config-trusted-cabundle-volume
          readOnly: true
          mountPath: /tekton-custom-certs/ca-bundle.crt
          subPath: ca-bundle.crt
        - name: config-service-cabundle-volume
          readOnly: true
          mountPath: /tekton-custom-certs/service-ca.crt
          subPath: service-ca.crt
      terminationMessagePolicy: File
      image: >-
        registry.redhat.io/rhel8/buildah@sha256:99cae35f40c7ec050fed3765b2b27e0b8bbea2aa2da7c16408e2ca13c60ff8ee
      workingDir: /gen-source
      args:
        - -c
        - >-
          pwd;
          ls;
          cat /gen-source/Dockerfile.gen;
          ls -a /tekton/creds-secrets/pipeline-dockercfg-xhzdn;
          cd /gen-source;

          /tekton/tools/entrypoint  '-docker-cfg=pipeline-dockercfg-xhzdn';

          cat ${HOME}/.docker/config.json;
          buildah bud --storage-driver=vfs --tls-verify=true --layers -f Dockerfile.gen --authfile /tekton/creds-secrets/pipeline-dockercfg-xhzdn/.dockercfg -t image-registry.openshift-image-registry.svc:5000/default/single-nodejs-app:2e92018 .
  serviceAccount: pipeline
  volumes:
    - name: tekton-internal-workspace
      emptyDir: {}
    - name: tekton-internal-home
      emptyDir: {}
    - name: tekton-internal-results
      emptyDir: {}
    - name: tekton-internal-steps
      emptyDir: {}
    - name: tekton-internal-secret-volume-pipeline-dockercfg-xhzdn-gn7kh
      secret:
        secretName: pipeline-dockercfg-xhzdn
        defaultMode: 420
    - name: tekton-internal-scripts
      emptyDir: {}
    - name: tekton-internal-tools
      emptyDir: {}
    - name: tekton-internal-downward
      downwardAPI:
        items:
          - path: ready
            fieldRef:
              apiVersion: v1
              fieldPath: 'metadata.annotations[''tekton.dev/ready'']'
        defaultMode: 420
    - name: tekton-creds-init-home-0
      emptyDir:
        medium: Memory
    - name: tekton-creds-init-home-1
      emptyDir:
        medium: Memory
    - name: tekton-creds-init-home-2
      emptyDir:
        medium: Memory
    - name: tekton-creds-init-home-3
      emptyDir:
        medium: Memory
    - name: varlibcontainers
      emptyDir: {}
    - name: gen-source
      emptyDir: {}
    - name: ws-rgdp4
      persistentVolumeClaim:
        claimName: app-studio-default-workspace
    - name: kube-api-access-6mt8b
      projected:
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              name: kube-root-ca.crt
              items:
                - key: ca.crt
                  path: ca.crt
          - downwardAPI:
              items:
                - path: namespace
                  fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
          - configMap:
              name: openshift-service-ca.crt
              items:
                - key: service-ca.crt
                  path: service-ca.crt
        defaultMode: 420
    - name: config-trusted-cabundle-volume
      configMap:
        name: config-trusted-cabundle
        items:
          - key: ca-bundle.crt
            path: ca-bundle.crt
        defaultMode: 420
    - name: config-service-cabundle-volume
      configMap:
        name: config-service-cabundle
        items:
          - key: service-ca.crt
            path: service-ca.crt
        defaultMode: 420
  dnsPolicy: ClusterFirst
  tolerations:
    - key: node.kubernetes.io/not-ready
      operator: Exists
      effect: NoExecute
      tolerationSeconds: 300
    - key: node.kubernetes.io/unreachable
      operator: Exists
      effect: NoExecute
      tolerationSeconds: 300
